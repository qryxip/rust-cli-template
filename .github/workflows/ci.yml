name: CI

on:
  schedule:
    - cron: '0 0 * * 0'
  push:
  pull_request:

jobs:
  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install toolchain and target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable-x86_64-unknown-linux-gnu
          default: true

      - name: '`cargo install`'
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-generate

      - name: '`cargo generate`'
        uses: actions-rs/cargo@v1
        with:
          command: generate
          args: --git . --branch ${{ github.sha }} -n tool

      - name: '`git ls-files | xargs rm`'
        run: git ls-files | xargs rm

      - name: '`cargo fmt -- --check`'
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --manifest-path ./tool/Cargo.toml -- --check

  build:
    strategy:
      fail-fast: false
      matrix:
        channel:
          - stable
        target_triple:
          - x86_64-pc-windows-msvc
          - x86_64-pc-windows-gnu
          - x86_64-apple-darwin
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
        include:
          - channel: stable
            target_triple: x86_64-pc-windows-msvc
            host_triple: x86_64-pc-windows-msvc
            os: windows-2019
          - channel: stable
            target_triple: x86_64-pc-windows-gnu
            host_triple: x86_64-pc-windows-gnu
            os: windows-2019
          - channel: stable
            target_triple: x86_64-apple-darwin
            host_triple: x86_64-apple-darwin
            os: macOS-10.14
          - channel: stable
            target_triple: x86_64-unknown-linux-gnu
            host_triple: x86_64-unknown-linux-gnu
            os: ubuntu-18.04
          - channel: stable
            target_triple: x86_64-unknown-linux-musl
            host_triple: x86_64-unknown-linux-gnu
            os: ubuntu-18.04

    name: ${{ matrix.channel }}-${{ matrix.target_triple }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: apt-get install
        run: sudo apt-get install musl-tools
        if: matrix.target_triple == 'x86_64-unknown-linux-musl'

      - name: Install toolchain and target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.channel }}-${{ matrix.host_triple }}
          target: ${{ matrix.target_triple }}
          default: true

      - name: rustup component add clippy
        run: rustup component add clippy

      - name: '`cargo install`'
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-generate

      - name: '`cargo generate`'
        uses: actions-rs/cargo@v1
        with:
          command: generate
          args: --git . --branch ${{ github.sha }} -n tool

      - name: '`git ls-files | xargs rm`'
        run: git ls-files | xargs rm

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --all-targets --all-features --target ${{ matrix.target_triple }} --manifest-path ./tool/Cargo.toml -- -D warnings

      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-targets --all-features --no-fail-fast --target ${{ matrix.target_triple }} --manifest-path ./tool/Cargo.toml

      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features --target ${{ matrix.target_triple }} --manifest-path ./tool/Cargo.toml
